mat
names(mat) <- c("set", "perc", "de")
p2<-ggplot(mat,aes(x=factor(set),y= perc,fill=factor(de)), color=factor(de)) +
stat_summary(fun.y=mean,position="stack",geom="bar")
mat <- data.frame(mat)
names(mat) <- c("set", "perc", "de")
p2<-ggplot(mat,aes(x=factor(set),y= perc,fill=factor(de)), color=factor(de)) +
stat_summary(fun.y=mean,position="stack",geom="bar")
p2
mat <- matrix(nrow = 4, ncol = 3)
mat <- data.frame(mat)
names(mat) <- c("set", "perc", "de")
mat$set <- c("fg", "fg", "bg", "bg")
mat$de <- c(1, 0, 1, 0)
mat$perc <- c(length(which(p50.de<= 0.001))/length(p50.de), 1 - length(which(p50.de<= 0.001))/length(p50.de),
length(which(rest.de<= 0.001))/length(rest.de), 1 - length(which(rest.de<= 0.001))/length(rest.de))
length(which(p50.de<= 0.001))/length(p50.de)
mat
?bh
bh.correction
pat.exp[1:5,1:5]
exp.data[1:5,1:5]
brca.exp <- "/home/richa/Documents/KPM/evaluation/mol_profiles/BRCA.exp.547.med.txt"
exp.data <- read.delim(brca.exp)
row.names(exp.data) <- exp.data[, 1]
exp.data[1:5,1:5]
exp.data <- exp.data[, -1]
norm.patient <- grep("11", do.call(rbind, strsplit(names(exp.data), "\\."))[, 4])
norm.exp <- exp.data[, norm.patient] ### normal expression
pat.exp <- exp.data[, -norm.patient] ### patient expression
pat.exp[1:5,1:5]
mean.norm <- apply(norm.exp, 1, FUN = function (x) median(x, na.rm = T))
pat.fc <- apply(pat.exp, 2, FUN = function (x) (as.numeric(x)/as.numeric(mean.norm))) # log 2 fold change
pat.fc[1:5,1:5]
row.names(pat.fc) <- row.names(pat.exp)
pat.fc[1:5,1:5]
dim(pat.exp)
dim(pat.fc)
dim(exp.data)
pat.de <- sapply(1:nrow(pat.exp), FUN = function (x) wilcox.test(as.numeric(as.matrix(pat.exp[x, ])),
as.numeric(as.matrix(norm.exp[x, ])))$p.value)# differential expression
names(pat.de) <- row.names(pat.exp)
pat.de.ad <- p.adjust(pat.de, method = "BH", n = length(pat.de))
########### gold standard genes
p50.file <- read.csv("/home/richa/Documents/Omics/Ref_List/BRCA/pam50_tr_set.csv")
p50.genes <- do.call(rbind, strsplit(names(p50.file), "_"))[, 1]
p50.exp <- pat.exp[which(pat.exp[, 1] %in% p50.genes), ]
pf50.exp[1:5,1:5]
p50.exp[1:5,1:5]
p50.exp <- pat.exp[row.names(pat.exp) %in% p50.genes), ]
p50.exp <- pat.exp[which(row.names(pat.exp) %in% p50.genes), ]
p50.exp[1:5,1:5]
p50.fc <- pat.fc[which(row.names(pat.fc)  %in% p50.genes), ]
p50.fc[1:5,1:5]
p50.de <- pat.de[which(names(pat.de) %in% p50.genes)]
rest.fc <- pat.fc[-which(row.names(pat.exp) %in% p50.genes), ]
rest.exp <- pat.exp[-which(row.names(pat.fc)  %in% p50.genes), ]
rest.de <- pat.de[-which(names(pat.de) %in% p50.genes)]
ls(9)
ls()
save(brca.exp, exp.data, norm.patient, norm.exp, pat.exp, pat.fc, pat.de, pat.de.ad, mean.norm, p50.de, p50.exp, p50.fc, p50.file, p50.genes, rest.exp, rest.fc, rest.de, file = "fg_bg_brca_210714.RData")
?ggplot
p1<-ggplot(mat,aes(x=set,y= perc1,fill=factor(de)), color=factor(de)) +
stat_summary(fun.y=mean,position="stack",geom="bar") + labs (title ="", xlab = "")
p1
mat <- matrix(nrow = 4, ncol = 5)
mat <- data.frame(mat)
names(mat) <- c("set", "de", "perc1", "perc2", "perc3")
mat$set <- c("fg", "fg", "bg", "bg")
mat$de <- c(1, 0, 1, 0)
cutoff <- 0.001
mat$perc1 <- c(length(which(p50.de<= cutoff))/length(p50.de), 1 - length(which(p50.de<= cutoff))/length(p50.de),
length(which(rest.de<= cutoff))/length(rest.de), 1 - length(which(rest.de<= cutoff))/length(rest.de))
cutoff <- 0.01
mat$perc2 <- c(length(which(p50.de<= cutoff))/length(p50.de), 1 - length(which(p50.de<= cutoff))/length(p50.de),
length(which(rest.de<= cutoff))/length(rest.de), 1 - length(which(rest.de<= cutoff))/length(rest.de))
cutoff <- 0.05
mat$perc3 <- c(length(which(p50.de<= cutoff))/length(p50.de), 1 - length(which(p50.de<= cutoff))/length(p50.de),
length(which(rest.de<= cutoff))/length(rest.de), 1 - length(which(rest.de<= cutoff))/length(rest.de))
mat
p1<-ggplot(mat,aes(x=set,y= perc1,fill=factor(de)), color=factor(de)) +
stat_summary(fun.y=mean,position="stack",geom="bar") + labs (title ="", xlab = "")
p1
p1<-ggplot(mat,aes(x=set,y= perc1,fill=factor(de)), color=de) +
stat_summary(fun.y=mean,position="stack",geom="bar") + labs (title ="", xlab = "")
p1
p1<-ggplot(mat,aes(x=set,y= perc1,fill=de), color=de) +
stat_summary(fun.y=mean,position="stack",geom="bar") + labs (title ="", xlab = "")
p1
p1<-ggplot(mat,aes(x=set,y= perc1,fill=factor(de)), color=de)) +
p1<-ggplot(mat,aes(x=set,y= perc1,fill=factor(de)), color=de) +
stat_summary(fun.y=mean,position="stack",geom="bar") + labs ("") + xlab ("") + ylab("")
p1
p1 <- ggplot(mat, aes(x = set, y = perc1, fill = factor(de)), color = de) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.001") + ylab("")
p1
pdf(file = "/home/richa/Documents/KPM/evaluation/mol_profiles/pam50_tcga_gene_exp_percentage_de.pdf", height = 10, width = 10)
par(mfrow=c(2, 2))
p1 <- ggplot(mat, aes(x = set, y = perc1, fill = factor(de)), color = de) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.001") + ylab("")
p2 <- ggplot(mat, aes(x = set, y = perc2, fill = factor(de)), color = factor(de)) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.01") + ylab("")
p3 <- ggplot(mat, aes(x = set, y = perc3,fill = factor(de)), color = factor(de)) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.05") + ylab("")
dev.off()
dev.off()
pdf(file = "/home/richa/Documents/KPM/evaluation/mol_profiles/pam50_tcga_gene_exp_percentage_de.pdf", height = 10, width = 10)
par(mfrow=c(2, 2))
p1 <- ggplot(mat, aes(x = set, y = perc1, fill = factor(de)), color = de) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.001") + ylab("")
p2 <- ggplot(mat, aes(x = set, y = perc2, fill = factor(de)), color = factor(de)) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.01") + ylab("")
p3 <- ggplot(mat, aes(x = set, y = perc3,fill = factor(de)), color = factor(de)) +
stat_summary(fun.y = mean, position = "stack", geom = "bar") + labs ("") + xlab ("pvalue <= 0.05") + ylab("")
dev.off()
dev.off()
pdf(file = "/home/richa/Documents/KPM/evaluation/mol_profiles/pam50_tcga_gene_exp_percentage_de.pdf", height = 10, width = 10)
par(mfrow=c(2, 2))
print(p1)
print(p2)
print(p3)
dev.off()
pdf(file = "/home/richa/Documents/KPM/evaluation/mol_profiles/pam50_tcga_gene_exp_percentage_de.pdf", height = 10, width = 10)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
print(p1, vp = vplayout(1, 1))
print(p2, vp = vplayout(1, 2))
print(p3, vp = vplayout(2, 1))
dev.off()
library(gridExtra)
require(ggplot2)# for line plots
library(grid) # for plotting in grids
library(useful)# vplayout
pdf(file = "/home/richa/Documents/KPM/evaluation/mol_profiles/pam50_tcga_gene_exp_percentage_de.pdf", height = 10, width = 10)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
print(p1, vp = vplayout(1, 1))
print(p2, vp = vplayout(1, 2))
print(p3, vp = vplayout(2, 1))
dev.off()
?rlnorm
?rbinom
rbinom(1000)
rbinom(1000, size=1)
rbinom(1000, size=1, prob=0.5)
hist(rbinom(1000, size=1, prob=0.5))
hist(1-(rbinom(1000, size=1, prob=0.5)))
hist((rbinom(1000, size=1, prob=0.5)))
hist(1-(rbinom(1000, size=1, prob=0.5)))
hist(1-(rbinom(1000, size=1, prob=0.2)))
hist((rbinom(1000, size=1, prob=0.2)))
hist(1-(rbinom(1000, size=1, prob=0.2)))
mu1 <- log(1)
mu2 <- log(10)
sig1 <- log(3)
sig2 <- log(3)
flag <- (rbinom(1000, size=1, prob=0.2)))
flag <- (rbinom(1000, size=1, prob=0.2))
y0 <- rlnorm(n,mean=mu1, sd = sig1)
y1 <- rlnorm(n,mean=mu2, sd = sig2)
n=1000
y0 <- rlnorm(n,mean=mu1, sd = sig1)
y1 <- rlnorm(n,mean=mu2, sd = sig2)
y <- y0*(1 - flag) + y1*flag
hist(y)
hist(y0*(1 - flag))
hist(y1*(flag))
hist(y0*(1 - flag))
mu1 <- log(1)
mu2 <- log(50)
sig1 <- log(3)
sig2 <- log(3)
mu1 <- log(1)
mu2 <- log(50)
sig1 <- log(3)
sig2 <- log(10)
cpct <- 0.2
bimodalDistFunc <- function (n,cpct, mu1, mu2, sig1, sig2) {
y0 <- rlnorm(n,mean=mu1, sd = sig1)
y1 <- rlnorm(n,mean=mu2, sd = sig2)
flag <- rbinom(n,size=1,prob=cpct)
y <- y0*(1 - flag) + y1*flag
}
bimodalData <- bimodalDistFunc(n=100,cpct,mu1,mu2, sig1,sig2)
hist(log(bimodalData))
bimodalData <- bimodalDistFunc(n=1000,cpct,mu1,mu2, sig1,sig2)
hist(log(bimodalData))
mu1 <- log(1)
mu2 <- log(50)
sig1 <- log(3)
sig2 <- log(3)
cpct <- 0.2
bimodalDistFunc <- function (n,cpct, mu1, mu2, sig1, sig2) {
y0 <- rlnorm(n,mean=mu1, sd = sig1)
y1 <- rlnorm(n,mean=mu2, sd = sig2)
flag <- rbinom(n,size=1,prob=cpct)
y <- y0*(1 - flag) + y1*flag
}
bimodalData <- bimodalDistFunc(n=1000,cpct,mu1,mu2, sig1,sig2)
hist(log(bimodalData))
library(truncnorm)
mu1 <- 0
install.packages("truncnorm")
library(truncnorm)
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
bimodalDistFunc <- function (n,cpct, mu1, mu2, sig1, sig2) {
y0 <- rtruncnorm(n, a=0, mean = mu1, sd = sig1)
y1 <- rtruncnorm(n, b=4000, mean = mu2, sd = sig2)
flag <- rbinom(n, size=1, prob=cpct)
y <- y0*(1 - flag) + y1*flag
}
bimodalData <- bimodalDistFunc(n=1000, cpct, mu1, mu2, sig1, sig2)
hist(bimodalData)
library(mixtools)
install.packages("mixtools")
require(mixtools)
mixbimod <- normalmixEM(bimodalData)
plot(mixbimod, which=2, main2="Equipment", xlab2="Expenditure ($)")
lines(density(bimodalData), lty=2, lwd=2)
mixbimod[c("lambda","mu","sigma")]
y0
y1
?rtruncnorm
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
y0 <- rtruncnorm(n, a=0, mean = mu1, sd = sig1)
y1 <- rtruncnorm(n, b=4000, mean = mu2, sd = sig2)
hist(y0)
hist(y1)
hist(y0)
hist(y1, add=T, col="red")
hist(y1)
hist(y0, add=T, col="red")
hist(y0)
?hist
hist(y0)
hist(y1)
hist(y1, xlim = c(0,4000))
hist(y1, xlim = c(0,4000), ylim =c(0,150))
hist(y1, xlim = c(0,4000), ylim =c(0,300))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n, a=-500, b=500, mean = mu1, sd = sig1)
hist(y0)
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
y0 <- rtruncnorm(n, a=0,b=500 mean = mu1, sd = sig1)
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
y0 <- rtruncnorm(n, a=-500,b=500, mean = mu1, sd = sig1)
hist(y0)
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
y0 <- rtruncnorm(n, a=-500,b=500, mean = mu1, sd = sig1)
y1 <- rtruncnorm(n, a=400, b=4000, mean = mu2, sd = sig2)
hist(y0)
hist(y1)
hist(y0)
hist(y1, xlim = c(-500,4000), ylim =c(0,300))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n=1000, a =-500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm(n=10000, a = 400, b=4000, mean = 1000 , sd = 500)
hist(y1, xlim = c(-500,4000), ylim =c(0,300))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n=1000, a =-500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm(n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,4000), ylim =c(0,10000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n=1000, a =-500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm(n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,4000), ylim =c(0,5000))
hist(y0, add=T, col="red")
hist(y1, xlim = c(-500,4000), ylim =c(0,2500))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n=1000, a =-500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm(n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,4000), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm(n=1000, a =-500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm(n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
flag <- rbinom(n, size=1, prob=cpct)
y <- y0*(1 - flag) + y1*flag
hist(y)
mu1 <- 0
mu2 <- 3500
sig1 <- 500
sig2 <- 500
cpct <- 0.8
bimodalDistFunc <- function (n,cpct, mu1, mu2, sig1, sig2) {
y0 <- rtruncnorm(n, a=0, mean = mu1, sd = sig1)
y1 <- rtruncnorm(n, b=4000, mean = mu2, sd = sig2)
flag <- rbinom(n, size=1, prob=cpct)
y <- y0*(1 - flag) + y1*flag
}
bimodalData <- bimodalDistFunc(n=1000, cpct, mu1, mu2, sig1, sig2)
hist(bimodalData)
library(mixtools)
require(mixtools)
mixbimod <- normalmixEM(bimodalData)
plot(mixbimod, which=2, main2="Equipment", xlab2="Expenditure ($)")
lines(density(bimodalData), lty=2, lwd=2)
mixbimod[c("lambda","mu","sigma")]
y
y0 <- rtruncnorm(n, a=0, mean = mu1, sd = sig1)
y1 <- rtruncnorm(n, b=4000, mean = mu2, sd = sig2)
flag <- rbinom(n, size=1, prob=cpct)
flag <- rbinom(n=1000, size=1, prob=0.8)
y00 <- y0*(1-flag)
y00
y11 <- y1*(flag)
y11
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm (n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0
y1
y
hist(bimodalData)
mixbimod <- normalmixEM(bimodalData)
plot(mixbimod, which=2, main2="Equipment", xlab2="Expenditure ($)")
lines(density(bimodalData), lty=2, lwd=2)
mixbimod[c("lambda","mu","sigma")]
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 0, sd = 50)
y1 <- rtruncnorm (n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 400, b=4000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 400, b=4000, mean = 1000 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 400, b=3000, mean = 1000 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 0, b=3000, mean = 1000 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 100, b=3000, mean = 1000 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=1000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=1000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=1000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,500))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,1000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=1000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,1500))
hist(y0, add=T, col="red")
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=10000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = 100, b=3000, mean = 1500 , sd = 500)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
data <- read.delim("/home/richa/Documents/TCGA//brca//BRCA.exp.547.med.txt")
names(data)
strsplit(names(data), "//.")
strsplit(names(data), "\\.")
do.call(rbind,(strsplit(names(data), "\\.")))
grep("11", do.call(rbind,(strsplit(names(data), "\\.")))[,4])
names(data)[grep("11", do.call(rbind,(strsplit(names(data), "\\.")))[,4])]
norm <- data[,grep("11", do.call(rbind,(strsplit(names(data), "\\.")))[,4])]
pat <- data[,-grep("11", do.call(rbind,(strsplit(names(data), "\\.")))[,4])]
norm <- cbind(data[, 1], norm)
folders <- list.files("/home/richa/Documents/KPM/evaluation/recomb/results/2014-09-24_11:18:12//pathways//first_20-2.txt//i10")
folders
folders <- folders[1]
results.folder <- "/home/richa/Documents/KPM/evaluation/recomb/results/2014-09-24_11:18:12//pathways//first_20-2.txt//i10"
lapply(folders, FUN = function(x) {setwd(results.folder); tar(tarfile= paste(x, ".tar",sep=""),
files =paste(results.folder, "/", x, sep=""), extra_flags = "-C");
# do.call(file.remove, list(list.files(paste(results.folder, "/", x, sep=""),
#                                 full.names=T)))
})
)
###
x
folders[1]
lapply(folders, FUN = function(x) {setwd(results.folder); tar(tarfile= paste(x, ".tar",sep=""),
files =x, extra_flags = "-C");
# do.call(file.remove, list(list.files(paste(results.folder, "/", x, sep=""),
#                                 full.names=T)))
})
y0 <- rtruncnorm (n=10000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = -450, b=550, mean = 150 , sd = 50)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
y0 <- rtruncnorm (n=10000, a = -500, b=500, mean = 100, sd = 50)
y1 <- rtruncnorm (n=10000, a = -400, b=600, mean = 200 , sd = 50)
hist(y1, xlim = c(-500,3500), ylim =c(0,2000))
hist(y0, add=T, col="red")
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_exp.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_exp.R')
?commandArgs
library(multicore)
library(parallel)
library(doParallel)
install.packages("doParallel")
library(doParallel)
cl <- makePSOCKcluster(2)
registerDoParallel(cl)
m <- matrix(rnorm(9), 3, 3)
foreach(i=1:nrow(m), .combine=rbind)
stopCluster(cl)
m
m <- matrix(rnorm(9), 3, 3)
m
foreach(i=1:nrow(m), .combine=rbind)
m
foreach(i=1:nrow(m), print("hey"))
?foreach
foreach(i=1:nrow(m)) %dopar% print("hey")
foreach(i=1:nrow(m)) %do% print("hey")
stopCluster(cl)
cl <- makePSOCKcluster(2)
registerDoParallel(cl)
stopCluster(cl)
foreach(i=1:nrow(m)) %dopar% i*2
cl <- makePSOCKcluster(2)
registerDoParallel(cl)
m <- matrix(rnorm(9), 3, 3)
foreach(i=1:nrow(m)) %dopar% i*2
foreach(i=1:nrow(m)) %do% i*2
foreach(i=1:1000000) %dopar% sqrt(i)
foreach(i=1:100) %dopar% sqrt(i)
library(doSNOW)
sample_fun <- function(x,y) {
x*y
}
threads <- 2
N <- 100
cl <- makeCluster(threads)
registerDoSNOW(cl)
?makeCluster
stopCluster(cl)
stopCluster(cl)
library(snow)
library(doSNOW)
library(snow)
sample_fun <- function(x,y) {
x*y
}
threads <- 2
N <- 100
cl <- makeCluster(threads)
install.packages("rpvm")
library(foreach)
library(doMC)
registerDoMC(2) #change the 2 to your number of CPU cores
foreach(i=1:10) %dopar% {
#loop contents here
}
foreach(i=1:10) %dopar% {
i^2
}
kpm.loc="/home/richa/Documents/KPM/Software/Latest/",
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
p.sig.l
source('~/Documents/KPM/evaluation/recomb/scripts/wrapper_kpm_l.R')
traceback
traceback()
length(ims)
library(mutlicore)
library(multicore)
library(multicore)
